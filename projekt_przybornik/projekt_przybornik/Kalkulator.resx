<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        W1vZtgMREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREeXG/wFk4Ct2
        UY2cogAAAABJRU5ErkJggg==
</value>
  </data>
</root>